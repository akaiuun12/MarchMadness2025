{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "0fc705c8",
   "metadata": {
    "papermill": {
     "duration": 0.004636,
     "end_time": "2025-03-23T12:30:10.306783",
     "exception": false,
     "start_time": "2025-03-23T12:30:10.302147",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# 2025 March Madness Kaggle Competition"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c50caa1",
   "metadata": {
    "papermill": {
     "duration": 0.003684,
     "end_time": "2025-03-23T12:30:10.314498",
     "exception": false,
     "start_time": "2025-03-23T12:30:10.310814",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "- Goal of the Competition\n",
    "\n",
    "이 컴피티션의 목표는 과거 데이터를 바탕으로 NCAA 디비전 1 대학농구 토너먼트, 혹은 \"3월의 광란\"의 결과를 예측하는 것이다.\n",
    "\n",
    "- Submission Strategy\n",
    "\n",
    "정규 시즌 결과를 바탕으로 팀별 승률, 평균 점수차(마진), 평균 득점 등을 구한 뒤 이를 바틍으로 토너먼트 결과를 예측한다. 학습 데이터는 2024년까지의 토너먼트 결과를 사용하기로 한다.\n",
    "\n",
    "예측 방법으로는 XGBoost 모형을 사용하여 각 특성을 바탕으로 마진을 구하는 모형을 생성한 뒤, 예측값(마진)을 승률로 변환하는 방식을 사용할 것이다."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40cf4b4c",
   "metadata": {
    "papermill": {
     "duration": 0.003804,
     "end_time": "2025-03-23T12:30:10.322459",
     "exception": false,
     "start_time": "2025-03-23T12:30:10.318655",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 1. Environment Settings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fd974445",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-23T12:30:10.331408Z",
     "iopub.status.busy": "2025-03-23T12:30:10.331064Z",
     "iopub.status.idle": "2025-03-23T12:30:12.662549Z",
     "shell.execute_reply": "2025-03-23T12:30:12.661376Z"
    },
    "papermill": {
     "duration": 2.338496,
     "end_time": "2025-03-23T12:30:12.664893",
     "exception": false,
     "start_time": "2025-03-23T12:30:10.326397",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import xgboost as xgb\n",
    "from sklearn.metrics import brier_score_loss"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9beef6fe",
   "metadata": {
    "papermill": {
     "duration": 0.007856,
     "end_time": "2025-03-23T12:30:12.680484",
     "exception": false,
     "start_time": "2025-03-23T12:30:12.672628",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 2. Load Regular Season Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b58c165a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-23T12:30:12.694100Z",
     "iopub.status.busy": "2025-03-23T12:30:12.693663Z",
     "iopub.status.idle": "2025-03-23T12:30:12.697669Z",
     "shell.execute_reply": "2025-03-23T12:30:12.696670Z"
    },
    "papermill": {
     "duration": 0.010111,
     "end_time": "2025-03-23T12:30:12.699012",
     "exception": false,
     "start_time": "2025-03-23T12:30:12.688901",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Men's prediction\n",
    "compact_results_url = '/kaggle/input/march-machine-learning-mania-2025/MRegularSeasonCompactResults.csv'\n",
    "detailed_results_url = '/kaggle/input/march-machine-learning-mania-2025/MRegularSeasonDetailedResults.csv'\n",
    "tournament_results_url = '/kaggle/input/march-machine-learning-mania-2025/MNCAATourneyCompactResults.csv'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b78ed7b5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-23T12:30:12.712044Z",
     "iopub.status.busy": "2025-03-23T12:30:12.711755Z",
     "iopub.status.idle": "2025-03-23T12:30:12.717350Z",
     "shell.execute_reply": "2025-03-23T12:30:12.716166Z"
    },
    "papermill": {
     "duration": 0.013511,
     "end_time": "2025-03-23T12:30:12.719067",
     "exception": false,
     "start_time": "2025-03-23T12:30:12.705556",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Load Regular Season Results\n",
    "def load_regular_season_results(compact_results_url, detailed_results_url):\n",
    "    regular_season_results = pd.read_csv(compact_results_url)\n",
    "    regular_season_results['margin'] = regular_season_results['WScore'] - regular_season_results['LScore']\n",
    "    rs_detailed = pd.read_csv(detailed_results_url)\n",
    "    return pd.merge(regular_season_results, rs_detailed, on=['Season', 'DayNum', 'WTeamID', 'LTeamID', 'WScore', 'LScore', 'WLoc', 'NumOT'], how='inner')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b3707a90",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-23T12:30:12.730528Z",
     "iopub.status.busy": "2025-03-23T12:30:12.730170Z",
     "iopub.status.idle": "2025-03-23T12:30:13.490326Z",
     "shell.execute_reply": "2025-03-23T12:30:13.489398Z"
    },
    "papermill": {
     "duration": 0.768107,
     "end_time": "2025-03-23T12:30:13.491835",
     "exception": false,
     "start_time": "2025-03-23T12:30:12.723728",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Season</th>\n",
       "      <th>DayNum</th>\n",
       "      <th>WTeamID</th>\n",
       "      <th>WScore</th>\n",
       "      <th>LTeamID</th>\n",
       "      <th>LScore</th>\n",
       "      <th>WLoc</th>\n",
       "      <th>NumOT</th>\n",
       "      <th>margin</th>\n",
       "      <th>WFGM</th>\n",
       "      <th>...</th>\n",
       "      <th>LFGA3</th>\n",
       "      <th>LFTM</th>\n",
       "      <th>LFTA</th>\n",
       "      <th>LOR</th>\n",
       "      <th>LDR</th>\n",
       "      <th>LAst</th>\n",
       "      <th>LTO</th>\n",
       "      <th>LStl</th>\n",
       "      <th>LBlk</th>\n",
       "      <th>LPF</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2003</td>\n",
       "      <td>10</td>\n",
       "      <td>1104</td>\n",
       "      <td>68</td>\n",
       "      <td>1328</td>\n",
       "      <td>62</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>27</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>16</td>\n",
       "      <td>22</td>\n",
       "      <td>10</td>\n",
       "      <td>22</td>\n",
       "      <td>8</td>\n",
       "      <td>18</td>\n",
       "      <td>9</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2003</td>\n",
       "      <td>10</td>\n",
       "      <td>1272</td>\n",
       "      <td>70</td>\n",
       "      <td>1393</td>\n",
       "      <td>63</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>26</td>\n",
       "      <td>...</td>\n",
       "      <td>24</td>\n",
       "      <td>9</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>25</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2003</td>\n",
       "      <td>11</td>\n",
       "      <td>1266</td>\n",
       "      <td>73</td>\n",
       "      <td>1437</td>\n",
       "      <td>61</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>24</td>\n",
       "      <td>...</td>\n",
       "      <td>26</td>\n",
       "      <td>14</td>\n",
       "      <td>23</td>\n",
       "      <td>31</td>\n",
       "      <td>22</td>\n",
       "      <td>9</td>\n",
       "      <td>12</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2003</td>\n",
       "      <td>11</td>\n",
       "      <td>1296</td>\n",
       "      <td>56</td>\n",
       "      <td>1457</td>\n",
       "      <td>50</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>18</td>\n",
       "      <td>...</td>\n",
       "      <td>22</td>\n",
       "      <td>8</td>\n",
       "      <td>15</td>\n",
       "      <td>17</td>\n",
       "      <td>20</td>\n",
       "      <td>9</td>\n",
       "      <td>19</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2003</td>\n",
       "      <td>11</td>\n",
       "      <td>1400</td>\n",
       "      <td>77</td>\n",
       "      <td>1208</td>\n",
       "      <td>71</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>16</td>\n",
       "      <td>17</td>\n",
       "      <td>27</td>\n",
       "      <td>21</td>\n",
       "      <td>15</td>\n",
       "      <td>12</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118877</th>\n",
       "      <td>2025</td>\n",
       "      <td>132</td>\n",
       "      <td>1196</td>\n",
       "      <td>86</td>\n",
       "      <td>1397</td>\n",
       "      <td>77</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>26</td>\n",
       "      <td>...</td>\n",
       "      <td>26</td>\n",
       "      <td>25</td>\n",
       "      <td>32</td>\n",
       "      <td>5</td>\n",
       "      <td>20</td>\n",
       "      <td>15</td>\n",
       "      <td>9</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118878</th>\n",
       "      <td>2025</td>\n",
       "      <td>132</td>\n",
       "      <td>1272</td>\n",
       "      <td>84</td>\n",
       "      <td>1412</td>\n",
       "      <td>72</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>32</td>\n",
       "      <td>...</td>\n",
       "      <td>27</td>\n",
       "      <td>17</td>\n",
       "      <td>23</td>\n",
       "      <td>21</td>\n",
       "      <td>23</td>\n",
       "      <td>10</td>\n",
       "      <td>15</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118879</th>\n",
       "      <td>2025</td>\n",
       "      <td>132</td>\n",
       "      <td>1276</td>\n",
       "      <td>59</td>\n",
       "      <td>1458</td>\n",
       "      <td>53</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>19</td>\n",
       "      <td>...</td>\n",
       "      <td>39</td>\n",
       "      <td>16</td>\n",
       "      <td>18</td>\n",
       "      <td>15</td>\n",
       "      <td>31</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118880</th>\n",
       "      <td>2025</td>\n",
       "      <td>132</td>\n",
       "      <td>1433</td>\n",
       "      <td>68</td>\n",
       "      <td>1206</td>\n",
       "      <td>63</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>19</td>\n",
       "      <td>...</td>\n",
       "      <td>21</td>\n",
       "      <td>16</td>\n",
       "      <td>19</td>\n",
       "      <td>14</td>\n",
       "      <td>19</td>\n",
       "      <td>13</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118881</th>\n",
       "      <td>2025</td>\n",
       "      <td>132</td>\n",
       "      <td>1463</td>\n",
       "      <td>90</td>\n",
       "      <td>1165</td>\n",
       "      <td>84</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>31</td>\n",
       "      <td>...</td>\n",
       "      <td>27</td>\n",
       "      <td>15</td>\n",
       "      <td>16</td>\n",
       "      <td>4</td>\n",
       "      <td>26</td>\n",
       "      <td>15</td>\n",
       "      <td>11</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>118882 rows × 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        Season  DayNum  WTeamID  WScore  LTeamID  LScore WLoc  NumOT  margin  \\\n",
       "0         2003      10     1104      68     1328      62    N      0       6   \n",
       "1         2003      10     1272      70     1393      63    N      0       7   \n",
       "2         2003      11     1266      73     1437      61    N      0      12   \n",
       "3         2003      11     1296      56     1457      50    N      0       6   \n",
       "4         2003      11     1400      77     1208      71    N      0       6   \n",
       "...        ...     ...      ...     ...      ...     ...  ...    ...     ...   \n",
       "118877    2025     132     1196      86     1397      77    N      0       9   \n",
       "118878    2025     132     1272      84     1412      72    N      0      12   \n",
       "118879    2025     132     1276      59     1458      53    N      0       6   \n",
       "118880    2025     132     1433      68     1206      63    N      0       5   \n",
       "118881    2025     132     1463      90     1165      84    N      0       6   \n",
       "\n",
       "        WFGM  ...  LFGA3  LFTM  LFTA  LOR  LDR  LAst  LTO  LStl  LBlk  LPF  \n",
       "0         27  ...     10    16    22   10   22     8   18     9     2   20  \n",
       "1         26  ...     24     9    20   20   25     7   12     8     6   16  \n",
       "2         24  ...     26    14    23   31   22     9   12     2     5   23  \n",
       "3         18  ...     22     8    15   17   20     9   19     4     3   23  \n",
       "4         30  ...     16    17    27   21   15    12   10     7     1   14  \n",
       "...      ...  ...    ...   ...   ...  ...  ...   ...  ...   ...   ...  ...  \n",
       "118877    26  ...     26    25    32    5   20    15    9     7     5   21  \n",
       "118878    32  ...     27    17    23   21   23    10   15     5     4   21  \n",
       "118879    19  ...     39    16    18   15   31     8    6     3     2   14  \n",
       "118880    19  ...     21    16    19   14   19    13   11    11     3   22  \n",
       "118881    31  ...     27    15    16    4   26    15   11     2     2   16  \n",
       "\n",
       "[118882 rows x 35 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_season = load_regular_season_results(compact_results_url, detailed_results_url)\n",
    "df_season"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "0da3306e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-23T12:30:13.501758Z",
     "iopub.status.busy": "2025-03-23T12:30:13.501507Z",
     "iopub.status.idle": "2025-03-23T12:30:13.508588Z",
     "shell.execute_reply": "2025-03-23T12:30:13.507956Z"
    },
    "papermill": {
     "duration": 0.013042,
     "end_time": "2025-03-23T12:30:13.509712",
     "exception": false,
     "start_time": "2025-03-23T12:30:13.496670",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Prepare Regular Season Data\n",
    "def prepare_regular_season_data(df):\n",
    "    W_columns = {'WTeamID': 'TeamID', 'WScore': 'Score', 'WLoc': 'Loc', 'WFGM': 'FGM', 'WFGA': 'FGA', 'WFGM3': 'FGM3', 'WFGA3': 'FGA3', 'WFTM': 'FTM', 'WFTA': 'FTA',\n",
    "                 'WOR': 'OR', 'WDR': 'DR', 'WAst': 'Ast', 'WTO': 'TO', 'WStl': 'Stl', 'WBlk': 'Blk', 'WPF': 'PF'}\n",
    "    L_columns = {'LTeamID': 'TeamID', 'LScore': 'Score', 'WLoc': 'Loc', 'LFGM': 'FGM', 'LFGA': 'FGA', 'LFGM3': 'FGM3', 'LFGA3': 'FGA3', 'LFTM': 'FTM', 'LFTA': 'FTA',\n",
    "                 'LOR': 'OR', 'LDR': 'DR', 'LAst': 'Ast', 'LTO': 'TO', 'LStl': 'Stl', 'LBlk': 'Blk', 'LPF': 'PF'}\n",
    "    \n",
    "    W_results = df[['Season', 'DayNum', 'margin'] + list(W_columns.keys())].rename(columns=W_columns)\n",
    "    L_results = df[['Season', 'DayNum', 'margin'] + list(L_columns.keys())].rename(columns=L_columns)\n",
    "    W_results['Result'], L_results['Result'] = 1, 0\n",
    "    L_results['margin'] = -L_results['margin']\n",
    "    \n",
    "    df_flatten = pd.concat([W_results, L_results], axis=0).drop('Loc', axis=1).reset_index(drop=True)\n",
    "    summary_mean = df_flatten.groupby(['Season', 'TeamID'], as_index=False).mean()\n",
    "    summary_mean['FG%'] = summary_mean['FGM'] / summary_mean['FGA']\n",
    "    summary_mean['3P%'] = summary_mean['FGM3'] / summary_mean['FGA3']\n",
    "    summary_mean['FT%'] = summary_mean['FTM'] / summary_mean['FTA']\n",
    "    summary_mean.rename(columns={'Result': 'Win%'}, inplace=True)\n",
    "    \n",
    "    # Self join to create a Cartesian product with TeamID ordering\n",
    "    df_cartesian = summary_mean.merge(summary_mean, on='Season', suffixes=('_x', '_y'))\n",
    "    df_cartesian = df_cartesian[df_cartesian['TeamID_x'] < df_cartesian['TeamID_y']]\n",
    "    \n",
    "    # Create ID variable\n",
    "    df_cartesian['ID'] = df_cartesian['Season'].astype(str) + \"_\" + df_cartesian['TeamID_x'].astype(str) + \"_\" + df_cartesian['TeamID_y'].astype(str)\n",
    "    \n",
    "    return df_cartesian"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "152e839d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-23T12:30:13.519243Z",
     "iopub.status.busy": "2025-03-23T12:30:13.519008Z",
     "iopub.status.idle": "2025-03-23T12:30:17.287747Z",
     "shell.execute_reply": "2025-03-23T12:30:17.286797Z"
    },
    "papermill": {
     "duration": 3.775053,
     "end_time": "2025-03-23T12:30:17.289187",
     "exception": false,
     "start_time": "2025-03-23T12:30:13.514134",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Season</th>\n",
       "      <th>TeamID_x</th>\n",
       "      <th>DayNum_x</th>\n",
       "      <th>margin_x</th>\n",
       "      <th>Score_x</th>\n",
       "      <th>FGM_x</th>\n",
       "      <th>FGA_x</th>\n",
       "      <th>FGM3_x</th>\n",
       "      <th>FGA3_x</th>\n",
       "      <th>FTM_x</th>\n",
       "      <th>...</th>\n",
       "      <th>Ast_y</th>\n",
       "      <th>TO_y</th>\n",
       "      <th>Stl_y</th>\n",
       "      <th>Blk_y</th>\n",
       "      <th>PF_y</th>\n",
       "      <th>Win%_y</th>\n",
       "      <th>FG%_y</th>\n",
       "      <th>3P%_y</th>\n",
       "      <th>FT%_y</th>\n",
       "      <th>ID</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2003</td>\n",
       "      <td>1102</td>\n",
       "      <td>72.464286</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>57.250000</td>\n",
       "      <td>19.142857</td>\n",
       "      <td>39.785714</td>\n",
       "      <td>7.821429</td>\n",
       "      <td>20.821429</td>\n",
       "      <td>11.142857</td>\n",
       "      <td>...</td>\n",
       "      <td>15.222222</td>\n",
       "      <td>12.629630</td>\n",
       "      <td>7.259259</td>\n",
       "      <td>2.333333</td>\n",
       "      <td>19.851852</td>\n",
       "      <td>0.481481</td>\n",
       "      <td>0.486074</td>\n",
       "      <td>0.338710</td>\n",
       "      <td>0.736390</td>\n",
       "      <td>2003_1102_1103</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2003</td>\n",
       "      <td>1102</td>\n",
       "      <td>72.464286</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>57.250000</td>\n",
       "      <td>19.142857</td>\n",
       "      <td>39.785714</td>\n",
       "      <td>7.821429</td>\n",
       "      <td>20.821429</td>\n",
       "      <td>11.142857</td>\n",
       "      <td>...</td>\n",
       "      <td>12.107143</td>\n",
       "      <td>13.285714</td>\n",
       "      <td>6.607143</td>\n",
       "      <td>3.785714</td>\n",
       "      <td>18.035714</td>\n",
       "      <td>0.607143</td>\n",
       "      <td>0.420362</td>\n",
       "      <td>0.320144</td>\n",
       "      <td>0.709898</td>\n",
       "      <td>2003_1102_1104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2003</td>\n",
       "      <td>1102</td>\n",
       "      <td>72.464286</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>57.250000</td>\n",
       "      <td>19.142857</td>\n",
       "      <td>39.785714</td>\n",
       "      <td>7.821429</td>\n",
       "      <td>20.821429</td>\n",
       "      <td>11.142857</td>\n",
       "      <td>...</td>\n",
       "      <td>14.538462</td>\n",
       "      <td>18.653846</td>\n",
       "      <td>9.307692</td>\n",
       "      <td>2.076923</td>\n",
       "      <td>20.230769</td>\n",
       "      <td>0.269231</td>\n",
       "      <td>0.395755</td>\n",
       "      <td>0.364815</td>\n",
       "      <td>0.705986</td>\n",
       "      <td>2003_1102_1105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2003</td>\n",
       "      <td>1102</td>\n",
       "      <td>72.464286</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>57.250000</td>\n",
       "      <td>19.142857</td>\n",
       "      <td>39.785714</td>\n",
       "      <td>7.821429</td>\n",
       "      <td>20.821429</td>\n",
       "      <td>11.142857</td>\n",
       "      <td>...</td>\n",
       "      <td>11.678571</td>\n",
       "      <td>17.035714</td>\n",
       "      <td>8.357143</td>\n",
       "      <td>3.142857</td>\n",
       "      <td>18.178571</td>\n",
       "      <td>0.464286</td>\n",
       "      <td>0.423773</td>\n",
       "      <td>0.346154</td>\n",
       "      <td>0.646421</td>\n",
       "      <td>2003_1102_1106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2003</td>\n",
       "      <td>1102</td>\n",
       "      <td>72.464286</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>57.250000</td>\n",
       "      <td>19.142857</td>\n",
       "      <td>39.785714</td>\n",
       "      <td>7.821429</td>\n",
       "      <td>20.821429</td>\n",
       "      <td>11.142857</td>\n",
       "      <td>...</td>\n",
       "      <td>11.928571</td>\n",
       "      <td>12.571429</td>\n",
       "      <td>6.857143</td>\n",
       "      <td>2.035714</td>\n",
       "      <td>15.892857</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>0.418272</td>\n",
       "      <td>0.357488</td>\n",
       "      <td>0.733509</td>\n",
       "      <td>2003_1102_1107</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2770809</th>\n",
       "      <td>2025</td>\n",
       "      <td>1477</td>\n",
       "      <td>61.612903</td>\n",
       "      <td>-10.516129</td>\n",
       "      <td>64.354839</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>55.290323</td>\n",
       "      <td>8.387097</td>\n",
       "      <td>26.709677</td>\n",
       "      <td>9.967742</td>\n",
       "      <td>...</td>\n",
       "      <td>13.107143</td>\n",
       "      <td>9.750000</td>\n",
       "      <td>6.607143</td>\n",
       "      <td>1.892857</td>\n",
       "      <td>16.678571</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>0.421367</td>\n",
       "      <td>0.357013</td>\n",
       "      <td>0.806867</td>\n",
       "      <td>2025_1477_1479</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2770810</th>\n",
       "      <td>2025</td>\n",
       "      <td>1477</td>\n",
       "      <td>61.612903</td>\n",
       "      <td>-10.516129</td>\n",
       "      <td>64.354839</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>55.290323</td>\n",
       "      <td>8.387097</td>\n",
       "      <td>26.709677</td>\n",
       "      <td>9.967742</td>\n",
       "      <td>...</td>\n",
       "      <td>12.966667</td>\n",
       "      <td>10.533333</td>\n",
       "      <td>6.866667</td>\n",
       "      <td>2.966667</td>\n",
       "      <td>15.833333</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.427206</td>\n",
       "      <td>0.296642</td>\n",
       "      <td>0.690058</td>\n",
       "      <td>2025_1477_1480</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2771173</th>\n",
       "      <td>2025</td>\n",
       "      <td>1478</td>\n",
       "      <td>62.833333</td>\n",
       "      <td>-9.466667</td>\n",
       "      <td>71.933333</td>\n",
       "      <td>24.800000</td>\n",
       "      <td>55.400000</td>\n",
       "      <td>7.500000</td>\n",
       "      <td>22.900000</td>\n",
       "      <td>14.833333</td>\n",
       "      <td>...</td>\n",
       "      <td>13.107143</td>\n",
       "      <td>9.750000</td>\n",
       "      <td>6.607143</td>\n",
       "      <td>1.892857</td>\n",
       "      <td>16.678571</td>\n",
       "      <td>0.428571</td>\n",
       "      <td>0.421367</td>\n",
       "      <td>0.357013</td>\n",
       "      <td>0.806867</td>\n",
       "      <td>2025_1478_1479</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2771174</th>\n",
       "      <td>2025</td>\n",
       "      <td>1478</td>\n",
       "      <td>62.833333</td>\n",
       "      <td>-9.466667</td>\n",
       "      <td>71.933333</td>\n",
       "      <td>24.800000</td>\n",
       "      <td>55.400000</td>\n",
       "      <td>7.500000</td>\n",
       "      <td>22.900000</td>\n",
       "      <td>14.833333</td>\n",
       "      <td>...</td>\n",
       "      <td>12.966667</td>\n",
       "      <td>10.533333</td>\n",
       "      <td>6.866667</td>\n",
       "      <td>2.966667</td>\n",
       "      <td>15.833333</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.427206</td>\n",
       "      <td>0.296642</td>\n",
       "      <td>0.690058</td>\n",
       "      <td>2025_1478_1480</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2771538</th>\n",
       "      <td>2025</td>\n",
       "      <td>1479</td>\n",
       "      <td>59.000000</td>\n",
       "      <td>-5.964286</td>\n",
       "      <td>65.785714</td>\n",
       "      <td>22.678571</td>\n",
       "      <td>53.821429</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>19.607143</td>\n",
       "      <td>13.428571</td>\n",
       "      <td>...</td>\n",
       "      <td>12.966667</td>\n",
       "      <td>10.533333</td>\n",
       "      <td>6.866667</td>\n",
       "      <td>2.966667</td>\n",
       "      <td>15.833333</td>\n",
       "      <td>0.166667</td>\n",
       "      <td>0.427206</td>\n",
       "      <td>0.296642</td>\n",
       "      <td>0.690058</td>\n",
       "      <td>2025_1479_1480</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1381961 rows × 44 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Season  TeamID_x   DayNum_x   margin_x    Score_x      FGM_x  \\\n",
       "1          2003      1102  72.464286   0.250000  57.250000  19.142857   \n",
       "2          2003      1102  72.464286   0.250000  57.250000  19.142857   \n",
       "3          2003      1102  72.464286   0.250000  57.250000  19.142857   \n",
       "4          2003      1102  72.464286   0.250000  57.250000  19.142857   \n",
       "5          2003      1102  72.464286   0.250000  57.250000  19.142857   \n",
       "...         ...       ...        ...        ...        ...        ...   \n",
       "2770809    2025      1477  61.612903 -10.516129  64.354839  23.000000   \n",
       "2770810    2025      1477  61.612903 -10.516129  64.354839  23.000000   \n",
       "2771173    2025      1478  62.833333  -9.466667  71.933333  24.800000   \n",
       "2771174    2025      1478  62.833333  -9.466667  71.933333  24.800000   \n",
       "2771538    2025      1479  59.000000  -5.964286  65.785714  22.678571   \n",
       "\n",
       "             FGA_x    FGM3_x     FGA3_x      FTM_x  ...      Ast_y       TO_y  \\\n",
       "1        39.785714  7.821429  20.821429  11.142857  ...  15.222222  12.629630   \n",
       "2        39.785714  7.821429  20.821429  11.142857  ...  12.107143  13.285714   \n",
       "3        39.785714  7.821429  20.821429  11.142857  ...  14.538462  18.653846   \n",
       "4        39.785714  7.821429  20.821429  11.142857  ...  11.678571  17.035714   \n",
       "5        39.785714  7.821429  20.821429  11.142857  ...  11.928571  12.571429   \n",
       "...            ...       ...        ...        ...  ...        ...        ...   \n",
       "2770809  55.290323  8.387097  26.709677   9.967742  ...  13.107143   9.750000   \n",
       "2770810  55.290323  8.387097  26.709677   9.967742  ...  12.966667  10.533333   \n",
       "2771173  55.400000  7.500000  22.900000  14.833333  ...  13.107143   9.750000   \n",
       "2771174  55.400000  7.500000  22.900000  14.833333  ...  12.966667  10.533333   \n",
       "2771538  53.821429  7.000000  19.607143  13.428571  ...  12.966667  10.533333   \n",
       "\n",
       "            Stl_y     Blk_y       PF_y    Win%_y     FG%_y     3P%_y  \\\n",
       "1        7.259259  2.333333  19.851852  0.481481  0.486074  0.338710   \n",
       "2        6.607143  3.785714  18.035714  0.607143  0.420362  0.320144   \n",
       "3        9.307692  2.076923  20.230769  0.269231  0.395755  0.364815   \n",
       "4        8.357143  3.142857  18.178571  0.464286  0.423773  0.346154   \n",
       "5        6.857143  2.035714  15.892857  0.250000  0.418272  0.357488   \n",
       "...           ...       ...        ...       ...       ...       ...   \n",
       "2770809  6.607143  1.892857  16.678571  0.428571  0.421367  0.357013   \n",
       "2770810  6.866667  2.966667  15.833333  0.166667  0.427206  0.296642   \n",
       "2771173  6.607143  1.892857  16.678571  0.428571  0.421367  0.357013   \n",
       "2771174  6.866667  2.966667  15.833333  0.166667  0.427206  0.296642   \n",
       "2771538  6.866667  2.966667  15.833333  0.166667  0.427206  0.296642   \n",
       "\n",
       "            FT%_y              ID  \n",
       "1        0.736390  2003_1102_1103  \n",
       "2        0.709898  2003_1102_1104  \n",
       "3        0.705986  2003_1102_1105  \n",
       "4        0.646421  2003_1102_1106  \n",
       "5        0.733509  2003_1102_1107  \n",
       "...           ...             ...  \n",
       "2770809  0.806867  2025_1477_1479  \n",
       "2770810  0.690058  2025_1477_1480  \n",
       "2771173  0.806867  2025_1478_1479  \n",
       "2771174  0.690058  2025_1478_1480  \n",
       "2771538  0.690058  2025_1479_1480  \n",
       "\n",
       "[1381961 rows x 44 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_summary = prepare_regular_season_data(df_season)\n",
    "df_summary"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d345b6b",
   "metadata": {
    "papermill": {
     "duration": 0.004956,
     "end_time": "2025-03-23T12:30:17.300220",
     "exception": false,
     "start_time": "2025-03-23T12:30:17.295264",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 3. Load Tournament Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "cf166019",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-23T12:30:17.310080Z",
     "iopub.status.busy": "2025-03-23T12:30:17.309834Z",
     "iopub.status.idle": "2025-03-23T12:30:17.314386Z",
     "shell.execute_reply": "2025-03-23T12:30:17.313778Z"
    },
    "papermill": {
     "duration": 0.0108,
     "end_time": "2025-03-23T12:30:17.315573",
     "exception": false,
     "start_time": "2025-03-23T12:30:17.304773",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Load and Process NCAA Tournament Data\n",
    "def load_tournament_results(tournament_results_url):\n",
    "    df_y = pd.read_csv(tournament_results_url)\n",
    "    df_y[\"Team1\"] = df_y[[\"WTeamID\", \"LTeamID\"]].min(axis=1)\n",
    "    df_y[\"Team2\"] = df_y[[\"WTeamID\", \"LTeamID\"]].max(axis=1)\n",
    "    df_y[\"ID\"] = df_y[\"Season\"].astype(str) + \"_\" + df_y[\"Team1\"].astype(str) + \"_\" + df_y[\"Team2\"].astype(str)\n",
    "    df_y[\"Margin\"] = df_y.apply(lambda row: row[\"WScore\"] - row[\"LScore\"] if row[\"WTeamID\"] == row[\"Team1\"] else row[\"LScore\"] - row[\"WScore\"], axis=1)\n",
    "    df_y['W/L'] = (df_y['Margin'] > 0).astype(int)\n",
    "    return df_y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "12a89bf7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-23T12:30:17.325689Z",
     "iopub.status.busy": "2025-03-23T12:30:17.325482Z",
     "iopub.status.idle": "2025-03-23T12:30:17.383226Z",
     "shell.execute_reply": "2025-03-23T12:30:17.382414Z"
    },
    "papermill": {
     "duration": 0.064446,
     "end_time": "2025-03-23T12:30:17.384697",
     "exception": false,
     "start_time": "2025-03-23T12:30:17.320251",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Season</th>\n",
       "      <th>DayNum</th>\n",
       "      <th>WTeamID</th>\n",
       "      <th>WScore</th>\n",
       "      <th>LTeamID</th>\n",
       "      <th>LScore</th>\n",
       "      <th>WLoc</th>\n",
       "      <th>NumOT</th>\n",
       "      <th>Team1</th>\n",
       "      <th>Team2</th>\n",
       "      <th>ID</th>\n",
       "      <th>Margin</th>\n",
       "      <th>W/L</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1985</td>\n",
       "      <td>136</td>\n",
       "      <td>1116</td>\n",
       "      <td>63</td>\n",
       "      <td>1234</td>\n",
       "      <td>54</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1116</td>\n",
       "      <td>1234</td>\n",
       "      <td>1985_1116_1234</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1985</td>\n",
       "      <td>136</td>\n",
       "      <td>1120</td>\n",
       "      <td>59</td>\n",
       "      <td>1345</td>\n",
       "      <td>58</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1120</td>\n",
       "      <td>1345</td>\n",
       "      <td>1985_1120_1345</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1985</td>\n",
       "      <td>136</td>\n",
       "      <td>1207</td>\n",
       "      <td>68</td>\n",
       "      <td>1250</td>\n",
       "      <td>43</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1207</td>\n",
       "      <td>1250</td>\n",
       "      <td>1985_1207_1250</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1985</td>\n",
       "      <td>136</td>\n",
       "      <td>1229</td>\n",
       "      <td>58</td>\n",
       "      <td>1425</td>\n",
       "      <td>55</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1229</td>\n",
       "      <td>1425</td>\n",
       "      <td>1985_1229_1425</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1985</td>\n",
       "      <td>136</td>\n",
       "      <td>1242</td>\n",
       "      <td>49</td>\n",
       "      <td>1325</td>\n",
       "      <td>38</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1242</td>\n",
       "      <td>1325</td>\n",
       "      <td>1985_1242_1325</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2513</th>\n",
       "      <td>2024</td>\n",
       "      <td>146</td>\n",
       "      <td>1301</td>\n",
       "      <td>76</td>\n",
       "      <td>1181</td>\n",
       "      <td>64</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1181</td>\n",
       "      <td>1301</td>\n",
       "      <td>2024_1181_1301</td>\n",
       "      <td>-12</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2514</th>\n",
       "      <td>2024</td>\n",
       "      <td>146</td>\n",
       "      <td>1345</td>\n",
       "      <td>72</td>\n",
       "      <td>1397</td>\n",
       "      <td>66</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1345</td>\n",
       "      <td>1397</td>\n",
       "      <td>2024_1345_1397</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2515</th>\n",
       "      <td>2024</td>\n",
       "      <td>152</td>\n",
       "      <td>1163</td>\n",
       "      <td>86</td>\n",
       "      <td>1104</td>\n",
       "      <td>72</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1104</td>\n",
       "      <td>1163</td>\n",
       "      <td>2024_1104_1163</td>\n",
       "      <td>-14</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2516</th>\n",
       "      <td>2024</td>\n",
       "      <td>152</td>\n",
       "      <td>1345</td>\n",
       "      <td>63</td>\n",
       "      <td>1301</td>\n",
       "      <td>50</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1301</td>\n",
       "      <td>1345</td>\n",
       "      <td>2024_1301_1345</td>\n",
       "      <td>-13</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2517</th>\n",
       "      <td>2024</td>\n",
       "      <td>154</td>\n",
       "      <td>1163</td>\n",
       "      <td>75</td>\n",
       "      <td>1345</td>\n",
       "      <td>60</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1163</td>\n",
       "      <td>1345</td>\n",
       "      <td>2024_1163_1345</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2518 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Season  DayNum  WTeamID  WScore  LTeamID  LScore WLoc  NumOT  Team1  \\\n",
       "0       1985     136     1116      63     1234      54    N      0   1116   \n",
       "1       1985     136     1120      59     1345      58    N      0   1120   \n",
       "2       1985     136     1207      68     1250      43    N      0   1207   \n",
       "3       1985     136     1229      58     1425      55    N      0   1229   \n",
       "4       1985     136     1242      49     1325      38    N      0   1242   \n",
       "...      ...     ...      ...     ...      ...     ...  ...    ...    ...   \n",
       "2513    2024     146     1301      76     1181      64    N      0   1181   \n",
       "2514    2024     146     1345      72     1397      66    N      0   1345   \n",
       "2515    2024     152     1163      86     1104      72    N      0   1104   \n",
       "2516    2024     152     1345      63     1301      50    N      0   1301   \n",
       "2517    2024     154     1163      75     1345      60    N      0   1163   \n",
       "\n",
       "      Team2              ID  Margin  W/L  \n",
       "0      1234  1985_1116_1234       9    1  \n",
       "1      1345  1985_1120_1345       1    1  \n",
       "2      1250  1985_1207_1250      25    1  \n",
       "3      1425  1985_1229_1425       3    1  \n",
       "4      1325  1985_1242_1325      11    1  \n",
       "...     ...             ...     ...  ...  \n",
       "2513   1301  2024_1181_1301     -12    0  \n",
       "2514   1397  2024_1345_1397       6    1  \n",
       "2515   1163  2024_1104_1163     -14    0  \n",
       "2516   1345  2024_1301_1345     -13    0  \n",
       "2517   1345  2024_1163_1345      15    1  \n",
       "\n",
       "[2518 rows x 13 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_tourney = load_tournament_results(tournament_results_url)\n",
    "df_tourney"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cd9375cf",
   "metadata": {
    "papermill": {
     "duration": 0.005026,
     "end_time": "2025-03-23T12:30:17.395199",
     "exception": false,
     "start_time": "2025-03-23T12:30:17.390173",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 4. Prepare Training Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "8b31e495",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-23T12:30:17.405522Z",
     "iopub.status.busy": "2025-03-23T12:30:17.405302Z",
     "iopub.status.idle": "2025-03-23T12:30:17.408651Z",
     "shell.execute_reply": "2025-03-23T12:30:17.408054Z"
    },
    "papermill": {
     "duration": 0.009861,
     "end_time": "2025-03-23T12:30:17.409820",
     "exception": false,
     "start_time": "2025-03-23T12:30:17.399959",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Merge Training Data\n",
    "def merge_training_data(df_X, df_y):\n",
    "    df_train = pd.merge(df_y, df_X, on='ID', how='inner')\n",
    "    df_final = df_train.rename(columns={'Season_x': \"Season\"}).sort_values(by='ID')\n",
    "    return df_final"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "89c77712",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-23T12:30:17.420084Z",
     "iopub.status.busy": "2025-03-23T12:30:17.419812Z",
     "iopub.status.idle": "2025-03-23T12:30:17.990322Z",
     "shell.execute_reply": "2025-03-23T12:30:17.989410Z"
    },
    "papermill": {
     "duration": 0.577182,
     "end_time": "2025-03-23T12:30:17.991749",
     "exception": false,
     "start_time": "2025-03-23T12:30:17.414567",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Season</th>\n",
       "      <th>DayNum</th>\n",
       "      <th>WTeamID</th>\n",
       "      <th>WScore</th>\n",
       "      <th>LTeamID</th>\n",
       "      <th>LScore</th>\n",
       "      <th>WLoc</th>\n",
       "      <th>NumOT</th>\n",
       "      <th>Team1</th>\n",
       "      <th>Team2</th>\n",
       "      <th>...</th>\n",
       "      <th>DR_y</th>\n",
       "      <th>Ast_y</th>\n",
       "      <th>TO_y</th>\n",
       "      <th>Stl_y</th>\n",
       "      <th>Blk_y</th>\n",
       "      <th>PF_y</th>\n",
       "      <th>Win%_y</th>\n",
       "      <th>FG%_y</th>\n",
       "      <th>3P%_y</th>\n",
       "      <th>FT%_y</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>2003</td>\n",
       "      <td>137</td>\n",
       "      <td>1231</td>\n",
       "      <td>67</td>\n",
       "      <td>1104</td>\n",
       "      <td>62</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1104</td>\n",
       "      <td>1231</td>\n",
       "      <td>...</td>\n",
       "      <td>25.625000</td>\n",
       "      <td>13.812500</td>\n",
       "      <td>11.500000</td>\n",
       "      <td>4.437500</td>\n",
       "      <td>5.343750</td>\n",
       "      <td>18.062500</td>\n",
       "      <td>0.625000</td>\n",
       "      <td>0.426621</td>\n",
       "      <td>0.348266</td>\n",
       "      <td>0.712707</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>2003</td>\n",
       "      <td>138</td>\n",
       "      <td>1112</td>\n",
       "      <td>96</td>\n",
       "      <td>1211</td>\n",
       "      <td>95</td>\n",
       "      <td>N</td>\n",
       "      <td>2</td>\n",
       "      <td>1112</td>\n",
       "      <td>1211</td>\n",
       "      <td>...</td>\n",
       "      <td>25.322581</td>\n",
       "      <td>15.741935</td>\n",
       "      <td>14.548387</td>\n",
       "      <td>6.806452</td>\n",
       "      <td>3.516129</td>\n",
       "      <td>18.645161</td>\n",
       "      <td>0.741935</td>\n",
       "      <td>0.470041</td>\n",
       "      <td>0.375635</td>\n",
       "      <td>0.721204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>2003</td>\n",
       "      <td>145</td>\n",
       "      <td>1242</td>\n",
       "      <td>78</td>\n",
       "      <td>1112</td>\n",
       "      <td>75</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1112</td>\n",
       "      <td>1242</td>\n",
       "      <td>...</td>\n",
       "      <td>26.900000</td>\n",
       "      <td>16.733333</td>\n",
       "      <td>14.900000</td>\n",
       "      <td>10.133333</td>\n",
       "      <td>4.900000</td>\n",
       "      <td>16.700000</td>\n",
       "      <td>0.766667</td>\n",
       "      <td>0.485286</td>\n",
       "      <td>0.339623</td>\n",
       "      <td>0.665746</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>2003</td>\n",
       "      <td>143</td>\n",
       "      <td>1112</td>\n",
       "      <td>88</td>\n",
       "      <td>1323</td>\n",
       "      <td>71</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1112</td>\n",
       "      <td>1323</td>\n",
       "      <td>...</td>\n",
       "      <td>26.870968</td>\n",
       "      <td>16.903226</td>\n",
       "      <td>12.774194</td>\n",
       "      <td>7.451613</td>\n",
       "      <td>5.645161</td>\n",
       "      <td>16.225806</td>\n",
       "      <td>0.709677</td>\n",
       "      <td>0.448698</td>\n",
       "      <td>0.380741</td>\n",
       "      <td>0.759887</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2003</td>\n",
       "      <td>136</td>\n",
       "      <td>1112</td>\n",
       "      <td>80</td>\n",
       "      <td>1436</td>\n",
       "      <td>51</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1112</td>\n",
       "      <td>1436</td>\n",
       "      <td>...</td>\n",
       "      <td>25.724138</td>\n",
       "      <td>14.206897</td>\n",
       "      <td>14.068966</td>\n",
       "      <td>6.862069</td>\n",
       "      <td>2.965517</td>\n",
       "      <td>15.896552</td>\n",
       "      <td>0.655172</td>\n",
       "      <td>0.444444</td>\n",
       "      <td>0.340757</td>\n",
       "      <td>0.657848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1347</th>\n",
       "      <td>2024</td>\n",
       "      <td>137</td>\n",
       "      <td>1361</td>\n",
       "      <td>69</td>\n",
       "      <td>1412</td>\n",
       "      <td>65</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1361</td>\n",
       "      <td>1412</td>\n",
       "      <td>...</td>\n",
       "      <td>24.181818</td>\n",
       "      <td>13.242424</td>\n",
       "      <td>11.303030</td>\n",
       "      <td>6.515152</td>\n",
       "      <td>4.727273</td>\n",
       "      <td>16.151515</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.449490</td>\n",
       "      <td>0.330619</td>\n",
       "      <td>0.742749</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1366</th>\n",
       "      <td>2024</td>\n",
       "      <td>139</td>\n",
       "      <td>1361</td>\n",
       "      <td>85</td>\n",
       "      <td>1463</td>\n",
       "      <td>57</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1361</td>\n",
       "      <td>1463</td>\n",
       "      <td>...</td>\n",
       "      <td>24.896552</td>\n",
       "      <td>14.655172</td>\n",
       "      <td>8.931034</td>\n",
       "      <td>5.793103</td>\n",
       "      <td>3.310345</td>\n",
       "      <td>15.413793</td>\n",
       "      <td>0.689655</td>\n",
       "      <td>0.461761</td>\n",
       "      <td>0.345902</td>\n",
       "      <td>0.706897</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1332</th>\n",
       "      <td>2024</td>\n",
       "      <td>136</td>\n",
       "      <td>1397</td>\n",
       "      <td>83</td>\n",
       "      <td>1389</td>\n",
       "      <td>49</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1389</td>\n",
       "      <td>1397</td>\n",
       "      <td>...</td>\n",
       "      <td>25.343750</td>\n",
       "      <td>16.750000</td>\n",
       "      <td>9.968750</td>\n",
       "      <td>7.937500</td>\n",
       "      <td>4.656250</td>\n",
       "      <td>17.437500</td>\n",
       "      <td>0.750000</td>\n",
       "      <td>0.444332</td>\n",
       "      <td>0.341912</td>\n",
       "      <td>0.749263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1349</th>\n",
       "      <td>2024</td>\n",
       "      <td>137</td>\n",
       "      <td>1429</td>\n",
       "      <td>88</td>\n",
       "      <td>1395</td>\n",
       "      <td>72</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1395</td>\n",
       "      <td>1429</td>\n",
       "      <td>...</td>\n",
       "      <td>24.935484</td>\n",
       "      <td>15.870968</td>\n",
       "      <td>10.741935</td>\n",
       "      <td>6.354839</td>\n",
       "      <td>4.161290</td>\n",
       "      <td>17.064516</td>\n",
       "      <td>0.806452</td>\n",
       "      <td>0.487709</td>\n",
       "      <td>0.321070</td>\n",
       "      <td>0.712291</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1358</th>\n",
       "      <td>2024</td>\n",
       "      <td>138</td>\n",
       "      <td>1397</td>\n",
       "      <td>62</td>\n",
       "      <td>1400</td>\n",
       "      <td>58</td>\n",
       "      <td>N</td>\n",
       "      <td>0</td>\n",
       "      <td>1397</td>\n",
       "      <td>1400</td>\n",
       "      <td>...</td>\n",
       "      <td>22.875000</td>\n",
       "      <td>15.718750</td>\n",
       "      <td>10.937500</td>\n",
       "      <td>7.187500</td>\n",
       "      <td>4.500000</td>\n",
       "      <td>17.468750</td>\n",
       "      <td>0.625000</td>\n",
       "      <td>0.473908</td>\n",
       "      <td>0.361280</td>\n",
       "      <td>0.756567</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1382 rows × 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Season  DayNum  WTeamID  WScore  LTeamID  LScore WLoc  NumOT  Team1  \\\n",
       "20      2003     137     1231      67     1104      62    N      0   1104   \n",
       "33      2003     138     1112      96     1211      95    N      2   1112   \n",
       "57      2003     145     1242      78     1112      75    N      0   1112   \n",
       "49      2003     143     1112      88     1323      71    N      0   1112   \n",
       "1       2003     136     1112      80     1436      51    N      0   1112   \n",
       "...      ...     ...      ...     ...      ...     ...  ...    ...    ...   \n",
       "1347    2024     137     1361      69     1412      65    N      0   1361   \n",
       "1366    2024     139     1361      85     1463      57    N      0   1361   \n",
       "1332    2024     136     1397      83     1389      49    N      0   1389   \n",
       "1349    2024     137     1429      88     1395      72    N      0   1395   \n",
       "1358    2024     138     1397      62     1400      58    N      0   1397   \n",
       "\n",
       "      Team2  ...       DR_y      Ast_y       TO_y      Stl_y     Blk_y  \\\n",
       "20     1231  ...  25.625000  13.812500  11.500000   4.437500  5.343750   \n",
       "33     1211  ...  25.322581  15.741935  14.548387   6.806452  3.516129   \n",
       "57     1242  ...  26.900000  16.733333  14.900000  10.133333  4.900000   \n",
       "49     1323  ...  26.870968  16.903226  12.774194   7.451613  5.645161   \n",
       "1      1436  ...  25.724138  14.206897  14.068966   6.862069  2.965517   \n",
       "...     ...  ...        ...        ...        ...        ...       ...   \n",
       "1347   1412  ...  24.181818  13.242424  11.303030   6.515152  4.727273   \n",
       "1366   1463  ...  24.896552  14.655172   8.931034   5.793103  3.310345   \n",
       "1332   1397  ...  25.343750  16.750000   9.968750   7.937500  4.656250   \n",
       "1349   1429  ...  24.935484  15.870968  10.741935   6.354839  4.161290   \n",
       "1358   1400  ...  22.875000  15.718750  10.937500   7.187500  4.500000   \n",
       "\n",
       "           PF_y    Win%_y     FG%_y     3P%_y     FT%_y  \n",
       "20    18.062500  0.625000  0.426621  0.348266  0.712707  \n",
       "33    18.645161  0.741935  0.470041  0.375635  0.721204  \n",
       "57    16.700000  0.766667  0.485286  0.339623  0.665746  \n",
       "49    16.225806  0.709677  0.448698  0.380741  0.759887  \n",
       "1     15.896552  0.655172  0.444444  0.340757  0.657848  \n",
       "...         ...       ...       ...       ...       ...  \n",
       "1347  16.151515  0.666667  0.449490  0.330619  0.742749  \n",
       "1366  15.413793  0.689655  0.461761  0.345902  0.706897  \n",
       "1332  17.437500  0.750000  0.444332  0.341912  0.749263  \n",
       "1349  17.064516  0.806452  0.487709  0.321070  0.712291  \n",
       "1358  17.468750  0.625000  0.473908  0.361280  0.756567  \n",
       "\n",
       "[1382 rows x 56 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_train = merge_training_data(df_summary, df_tourney)\n",
    "df_train"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0b08ea05",
   "metadata": {
    "papermill": {
     "duration": 0.005155,
     "end_time": "2025-03-23T12:30:18.002536",
     "exception": false,
     "start_time": "2025-03-23T12:30:17.997381",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 5. Train the Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "11822539",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-23T12:30:18.013671Z",
     "iopub.status.busy": "2025-03-23T12:30:18.013407Z",
     "iopub.status.idle": "2025-03-23T12:30:18.017262Z",
     "shell.execute_reply": "2025-03-23T12:30:18.016376Z"
    },
    "papermill": {
     "duration": 0.010752,
     "end_time": "2025-03-23T12:30:18.018557",
     "exception": false,
     "start_time": "2025-03-23T12:30:18.007805",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Define Features\n",
    "features = [\n",
    "    \"Win%_x\", \"margin_x\", \"Score_x\", \"FG%_x\", \"3P%_x\", \"FT%_x\", \"OR_x\", \"DR_x\", \"Ast_x\", \"TO_x\", \"Stl_x\", \"Blk_x\", \"PF_x\",\n",
    "    \"Win%_y\", \"margin_y\", \"Score_y\", \"FG%_y\", \"3P%_y\", \"FT%_y\", \"OR_y\", \"DR_y\", \"Ast_y\", \"TO_y\", \"Stl_y\", \"Blk_y\", \"PF_y\"\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "f588e13d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-23T12:30:18.029886Z",
     "iopub.status.busy": "2025-03-23T12:30:18.029681Z",
     "iopub.status.idle": "2025-03-23T12:30:18.033562Z",
     "shell.execute_reply": "2025-03-23T12:30:18.032799Z"
    },
    "papermill": {
     "duration": 0.010801,
     "end_time": "2025-03-23T12:30:18.034717",
     "exception": false,
     "start_time": "2025-03-23T12:30:18.023916",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Train and Evaluate Model\n",
    "def train(df_train, features):\n",
    "    X_train, y_train = df_train[features], df_train[\"Margin\"]\n",
    "    \n",
    "    model = xgb.XGBRegressor(objective='reg:squarederror', \n",
    "                             n_estimators=1000, \n",
    "                             learning_rate=0.05, \n",
    "                             max_depth=10, \n",
    "                             random_state=42)\n",
    "    model.fit(X_train, y_train)\n",
    "\n",
    "    return model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "b47b7c93",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-23T12:30:18.045462Z",
     "iopub.status.busy": "2025-03-23T12:30:18.045224Z",
     "iopub.status.idle": "2025-03-23T12:30:26.783058Z",
     "shell.execute_reply": "2025-03-23T12:30:26.782239Z"
    },
    "papermill": {
     "duration": 8.744662,
     "end_time": "2025-03-23T12:30:26.784450",
     "exception": false,
     "start_time": "2025-03-23T12:30:18.039788",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Pred</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2639408</th>\n",
       "      <td>2025_1101_1102</td>\n",
       "      <td>0.595156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2639409</th>\n",
       "      <td>2025_1101_1103</td>\n",
       "      <td>0.474800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2639410</th>\n",
       "      <td>2025_1101_1104</td>\n",
       "      <td>0.120408</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2639411</th>\n",
       "      <td>2025_1101_1105</td>\n",
       "      <td>0.516106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2639412</th>\n",
       "      <td>2025_1101_1106</td>\n",
       "      <td>0.552466</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2770809</th>\n",
       "      <td>2025_1477_1479</td>\n",
       "      <td>0.477161</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2770810</th>\n",
       "      <td>2025_1477_1480</td>\n",
       "      <td>0.438184</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2771173</th>\n",
       "      <td>2025_1478_1479</td>\n",
       "      <td>0.533110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2771174</th>\n",
       "      <td>2025_1478_1480</td>\n",
       "      <td>0.517260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2771538</th>\n",
       "      <td>2025_1479_1480</td>\n",
       "      <td>0.704709</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>66066 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                     ID      Pred\n",
       "2639408  2025_1101_1102  0.595156\n",
       "2639409  2025_1101_1103  0.474800\n",
       "2639410  2025_1101_1104  0.120408\n",
       "2639411  2025_1101_1105  0.516106\n",
       "2639412  2025_1101_1106  0.552466\n",
       "...                 ...       ...\n",
       "2770809  2025_1477_1479  0.477161\n",
       "2770810  2025_1477_1480  0.438184\n",
       "2771173  2025_1478_1479  0.533110\n",
       "2771174  2025_1478_1480  0.517260\n",
       "2771538  2025_1479_1480  0.704709\n",
       "\n",
       "[66066 rows x 2 columns]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model = train(df_train, features)\n",
    "\n",
    "df_2025 = df_summary[df_summary.Season == 2025].copy()\n",
    "df_2025[\"Pred\"] = 1 / (1 + np.exp(-model.predict(df_2025[features]) / 10))\n",
    "\n",
    "df_prediction_men = df_2025[[\"ID\", \"Pred\"]]\n",
    "df_prediction_men"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aa840256",
   "metadata": {
    "papermill": {
     "duration": 0.005102,
     "end_time": "2025-03-23T12:30:26.795225",
     "exception": false,
     "start_time": "2025-03-23T12:30:26.790123",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 6. Women's Tournament"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "7f935e84",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-23T12:30:26.806640Z",
     "iopub.status.busy": "2025-03-23T12:30:26.806319Z",
     "iopub.status.idle": "2025-03-23T12:30:35.629198Z",
     "shell.execute_reply": "2025-03-23T12:30:35.628391Z"
    },
    "papermill": {
     "duration": 8.830463,
     "end_time": "2025-03-23T12:30:35.630836",
     "exception": false,
     "start_time": "2025-03-23T12:30:26.800373",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Pred</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1831001</th>\n",
       "      <td>2025_3101_3102</td>\n",
       "      <td>0.726723</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1831002</th>\n",
       "      <td>2025_3101_3103</td>\n",
       "      <td>0.740626</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1831003</th>\n",
       "      <td>2025_3101_3104</td>\n",
       "      <td>0.178980</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1831004</th>\n",
       "      <td>2025_3101_3105</td>\n",
       "      <td>0.726934</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1831005</th>\n",
       "      <td>2025_3101_3106</td>\n",
       "      <td>0.752702</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1960956</th>\n",
       "      <td>2025_3477_3479</td>\n",
       "      <td>0.697416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1960957</th>\n",
       "      <td>2025_3477_3480</td>\n",
       "      <td>0.712557</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961318</th>\n",
       "      <td>2025_3478_3479</td>\n",
       "      <td>0.659497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961319</th>\n",
       "      <td>2025_3478_3480</td>\n",
       "      <td>0.686674</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961681</th>\n",
       "      <td>2025_3479_3480</td>\n",
       "      <td>0.701832</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>65341 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                     ID      Pred\n",
       "1831001  2025_3101_3102  0.726723\n",
       "1831002  2025_3101_3103  0.740626\n",
       "1831003  2025_3101_3104  0.178980\n",
       "1831004  2025_3101_3105  0.726934\n",
       "1831005  2025_3101_3106  0.752702\n",
       "...                 ...       ...\n",
       "1960956  2025_3477_3479  0.697416\n",
       "1960957  2025_3477_3480  0.712557\n",
       "1961318  2025_3478_3479  0.659497\n",
       "1961319  2025_3478_3480  0.686674\n",
       "1961681  2025_3479_3480  0.701832\n",
       "\n",
       "[65341 rows x 2 columns]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Women's Prediction\n",
    "compact_results_url = '/kaggle/input/march-machine-learning-mania-2025/WRegularSeasonCompactResults.csv'\n",
    "detailed_results_url = '/kaggle/input/march-machine-learning-mania-2025/WRegularSeasonDetailedResults.csv'\n",
    "tournament_results_url = '/kaggle/input/march-machine-learning-mania-2025/WNCAATourneyCompactResults.csv'\n",
    "\n",
    "# Define URLs\n",
    "df_season = load_regular_season_results(compact_results_url, detailed_results_url)\n",
    "df_summary = prepare_regular_season_data(df_season)\n",
    "df_tourney = load_tournament_results(tournament_results_url)\n",
    "df_train = merge_training_data(df_summary, df_tourney)\n",
    "\n",
    "model = train(df_train, features)\n",
    "\n",
    "df_2025 = df_summary[df_summary.Season == 2025].copy()\n",
    "df_2025[\"Pred\"] = 1 / (1 + np.exp(-model.predict(df_2025[features]) / 10))\n",
    "\n",
    "df_prediction_women = df_2025[[\"ID\", \"Pred\"]]\n",
    "df_prediction_women"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c2e92f50",
   "metadata": {
    "papermill": {
     "duration": 0.006038,
     "end_time": "2025-03-23T12:30:35.644084",
     "exception": false,
     "start_time": "2025-03-23T12:30:35.638046",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## 7. Submission"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "52f61cf6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-23T12:30:35.656406Z",
     "iopub.status.busy": "2025-03-23T12:30:35.656177Z",
     "iopub.status.idle": "2025-03-23T12:30:35.889192Z",
     "shell.execute_reply": "2025-03-23T12:30:35.888173Z"
    },
    "papermill": {
     "duration": 0.240094,
     "end_time": "2025-03-23T12:30:35.890460",
     "exception": false,
     "start_time": "2025-03-23T12:30:35.650366",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Submission file created successfully.\n"
     ]
    }
   ],
   "source": [
    "# Create final submission file\n",
    "submission_df = pd.concat([\n",
    "    df_prediction_men,\n",
    "    df_prediction_women\n",
    "], axis=0).sort_values(by='ID')\n",
    "\n",
    "submission_df.reset_index(drop=True, inplace=True)\n",
    "\n",
    "# Save submission file\n",
    "submission_df.to_csv(\"submission.csv\", index=False)\n",
    "print(\"Submission file created successfully.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "c8d0afa1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-03-23T12:30:35.902778Z",
     "iopub.status.busy": "2025-03-23T12:30:35.902518Z",
     "iopub.status.idle": "2025-03-23T12:30:35.910891Z",
     "shell.execute_reply": "2025-03-23T12:30:35.910165Z"
    },
    "papermill": {
     "duration": 0.015767,
     "end_time": "2025-03-23T12:30:35.912177",
     "exception": false,
     "start_time": "2025-03-23T12:30:35.896410",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Pred</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2025_1101_1102</td>\n",
       "      <td>0.595156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2025_1101_1103</td>\n",
       "      <td>0.474800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2025_1101_1104</td>\n",
       "      <td>0.120408</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2025_1101_1105</td>\n",
       "      <td>0.516106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2025_1101_1106</td>\n",
       "      <td>0.552466</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131402</th>\n",
       "      <td>2025_3477_3479</td>\n",
       "      <td>0.697416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131403</th>\n",
       "      <td>2025_3477_3480</td>\n",
       "      <td>0.712557</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131404</th>\n",
       "      <td>2025_3478_3479</td>\n",
       "      <td>0.659497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131405</th>\n",
       "      <td>2025_3478_3480</td>\n",
       "      <td>0.686674</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131406</th>\n",
       "      <td>2025_3479_3480</td>\n",
       "      <td>0.701832</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>131407 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                    ID      Pred\n",
       "0       2025_1101_1102  0.595156\n",
       "1       2025_1101_1103  0.474800\n",
       "2       2025_1101_1104  0.120408\n",
       "3       2025_1101_1105  0.516106\n",
       "4       2025_1101_1106  0.552466\n",
       "...                ...       ...\n",
       "131402  2025_3477_3479  0.697416\n",
       "131403  2025_3477_3480  0.712557\n",
       "131404  2025_3478_3479  0.659497\n",
       "131405  2025_3478_3480  0.686674\n",
       "131406  2025_3479_3480  0.701832\n",
       "\n",
       "[131407 rows x 2 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "submission_df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "da1e315e",
   "metadata": {
    "papermill": {
     "duration": 0.006022,
     "end_time": "2025-03-23T12:30:35.924211",
     "exception": false,
     "start_time": "2025-03-23T12:30:35.918189",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "\n",
    "## References\n",
    "\n",
    "- [Simple starter notebook for March Mania 2025](https://www.kaggle.com/code/paultimothymooney/simple-starter-notebook-for-march-mania-2025)\n",
    "- [What is a Brier Score and How is it Calculated?](https://www.cultivatelabs.com/crowdsourced-forecasting-guide/what-is-a-brier-score-and-how-is-it-calculated)\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "databundleVersionId": 11441828,
     "sourceId": 91497,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 30839,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 28.95589,
   "end_time": "2025-03-23T12:30:36.447445",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-03-23T12:30:07.491555",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
